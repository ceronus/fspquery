name: Continuous Integration

env:
      SOLUTION_NAME: FspQuery

permissions:
  contents: read
  packages: read

on:
  push:
    branches:
      - master
      - release/**

    paths-ignore:
      - '.github/**'
      - 'docs/**'
      - 'README.md'

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        dotnet: [ '8.x', '9.x' ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET ${{ matrix.dotnet }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet }}
          source-url: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache NuGet
        uses: actions/cache@v4
        with:
          path: |
            ~/.nuget/packages
            "C:\Users\runneradmin\.nuget\packages"
          key: nuget-${{ runner.os }}-${{ matrix.dotnet }}-${{ hashFiles('**/*.sln', '**/*.csproj', 'global.json') }}
          restore-keys: |
            nuget-${{ runner.os }}-${{ matrix.dotnet }}-
            nuget-${{ runner.os }}-

      - name: Restore
        run: dotnet restore ${{ env.SOLUTION_NAME }}.sln

      - name: Build (Release)
        run: dotnet build ${{ env.SOLUTION_NAME }}.sln --configuration Release --no-restore

      - name: Test (no-build)
        run: >
          dotnet test ${{ env.SOLUTION_NAME }}.sln
          --configuration Release
          --no-build
          --collect "XPlat Code Coverage"
          --logger "trx;LogFileName=results.trx"
          --results-directory ./artifacts/test-results

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.os }}-${{ matrix.dotnet }}
          path: artifacts/test-results/**
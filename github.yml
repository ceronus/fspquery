name: Publish to GitHub Packages

on:
  push:
    branches: [ master ]
    paths: ['**/*.csproj']

jobs:
  pack-and-push:
    runs-on: windows-latest
    env:
      GITHUB_SOURCE_URL: https://nuget.pkg.github.com/ceronus/index.json

    permissions:
      contents: write       # needed for the job to create a git tag
      packages: write       # allows GITHUB_TOKEN to push packages

    steps:
    
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0    # required to create/push a tag back

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.x'
          source-url: ${{ env.GITHUB_SOURCE_URL }}
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Restore dependencies (dotnet restore)
        run: dotnet restore
        working-directory: src

      - name: Build (dotnet build)
        run: dotnet build `
             --configuration release `
             --no-restore
        working-directory: src

      - name: Read version from .csproj file (PowerShell)
        shell: pwsh
        run: |
          $csproj = Get-ChildItem -Path src -Filter *.csproj -Recurse | Select-Object -First 1
          $xml    = [xml](Get-Content $csproj.FullName)
          $v      = ($xml.Project.PropertyGroup | Where-Object { $_.Version }).Version
          if (-not $v) { throw "No <Version> found in $($csproj.FullName)" }
          "PACKAGE_VERSION=$v" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Create and push git tag from .csproj version
        if: success()
        shell: pwsh
        run: |
          $TAG = "v${{ env.PACKAGE_VERSION }}"
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          # does the tag already exist?
          $exists = git rev-parse -q --verify "refs/tags/$TAG" 2>$null
          if ($LASTEXITCODE -eq 0) {
              Write-Host "Tag $TAG already exists, skipping."
          } else {
              git tag -a $TAG -m "Release $TAG"
              git push origin $TAG
          }

      - name: Build solution and create nuget package (dotnet pack)
        run: dotnet pack `
             --configuration release `
             --output publish
        working-directory: src

      - name: Publish package to GitHub Packages registry (dotnet nuget push)
        run: dotnet nuget push "**/publish/*.nupkg" `
             --source ${{ env.GITHUB_SOURCE_URL }} `
             --api-key ${{ secrets.GITHUB_TOKEN }} `
             --skip-duplicate

      - name: Publish symbols to GitHub Packages registry (dotnet nuget push)
        run: dotnet nuget push "**/publish/*.snupkg" `
             --source ${{ env.GITHUB_SOURCE_URL }} `
             --api-key ${{ secrets.GITHUB_TOKEN }} `
             --skip-duplicate